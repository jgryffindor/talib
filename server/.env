APP_ENV=development
APP_NAME=Talib
APP_URL=http://localhost:9001
APP_PORT=3000

# If this is unset, the server will 404 on any URLs it does not serve.
APP_STATIC_ROOT=${PWD}/../client/dist

# ==== DATABASE ====
# These depend on the driver being used. DATABASE_TYPE and DATABASE_URL might
# be the only thing you need.
DATABASE_TYPE=postgres
# To start, use
# docker run -e POSTGRES_PASSWORD=mysecretpassword -d -p 5432:5432 postgres
# Which will set the default password.
DATABASE_URL=postgres://postgres:mysecretpassword@localhost:5432
DATABASE_DATABASE=postgres

# ==== SCHEDULER ====
# Scheduler cron job running. If the scheduler hasn't finished work before the
# next job, it will skip the schedule time.
# If this and SCHEDULER_SECONDS is missing, scheduler is disabled.
# If both are set, this is an error.
SCHEDULER_CRON="*/5 * * * * *"
# SCHEDULER_SECONDS=300

# Maximum amount of blocks to fetch schedule.
# Since this is blocking future jobs, this should be a reasonable amount
# to fetch, as we also need to fetch the latest block to update the height
# of the whole blockchain.
SCHEDULER_MAX_BLOCK=500
# How many maximum queries in parallel to a single network.
SCHEDULER_PARALLEL=10
# How much to sleep between parallel batches, in seconds.
SCHEDULER_PARALLEL_SLEEP=0.2

GRAFANA_API_URL="https://grafana.liftedinit.tech"
GRAFANA_USERNAME=username
GRAFANA_PASSWORD=secretpassword
PROMETHEUS_DATASOURCE_ID=datasourceid

# JWT specific authentication. This should be changed.
JWT_SECRET="DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE."

# Administrator. This cannot be changed once the application is running, and
# is required.
ADMIN_USERNAME=admin
ADMIN_PASSWORD=admin

# ====  Metrics SCHEDULER ====
# Scheduler cron job running. If the scheduler hasn't finished work before the
# next job, it will skip the schedule time.
# If left undefined the metrics scheduler will not run.
METRICS_SCHEDULER_CRON="* * * * *"
# Default startdate of a metric as a fallback to the Prometheus query config
METRICS_SCHEDULER_STARTDATE_TIMESTAMP=1684076400000
# Minimum batch size, scheduler will not run if a metric has less than 
# this amount of metric datapoints to collect
METRICS_SCHEDULER_MIN_BATCH_SIZE=20
# Max batch size for each scheduler run
# Multiplied by the number of metrics
METRICS_SCHEDULER_BATCH_SIZE=100
# Interval in ms for prometheus queries
METRICS_SCHEDULER_INTERVAL=600000

# ====  Geo SCHEDULER ====
# Scheduler cron job running. If the scheduler hasn't finished work before the
# next job, it will skip the schedule time.
# If left undefined the metrics scheduler will not run.
GEO_SCHEDULER_CRON="*0 * * * *"